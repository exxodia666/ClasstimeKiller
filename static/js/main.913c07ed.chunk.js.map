{"version":3,"sources":["redux/actions/show_quizzes.js","redux/reducers/quizzes/quizzes.js","redux/actions/results.js","redux/reducers/results/results.js","redux/actions/save_answers.js","redux/reducers/answers/answer.js","redux/actions/load_quiz_list.js","redux/reducers/quiz_list/quiz_list.js","redux/actions/add_quizze.js","redux/reducers/addedQuizes/addedQuizes.js","redux/actions/add_user.js","redux/reducers/add_user/add_user.js","redux/actions/get_quiz_rating.js","redux/reducers/quiz_rating/quiz_rating.js","redux/actions/add_test.js","redux/reducers/add_test/index.js","redux/reducers/index.js","redux/sagas/quizzes.js","redux/actions/send_answers.js","redux/sagas/answers.js","redux/sagas/load_quizlist.js","redux/sessionStorage.js","redux/sagas/addTest.js","redux/sagas/authUser.js","redux/sagas/results.js","redux/sagas/getQuizRating.js","redux/store.js","components/Header/Header.js","components/Loader.js","navigation/Screens.js/HomeScreen.js","components/ListQuiz.js","components/Question.js","navigation/Screens.js/Quiz.js","components/Result/Result.js","components/ErrorComponent/Error.js","navigation/Screens.js/ResultScreen/ResultsScreen.js","navigation/Screens.js/UserScreen.js","components/Form/Choice.js","components/Form/Question.js","navigation/Screens.js/AddQuizScreen.js","navigation/Screens.js/TestDoneScreen/TestDoneScreen.js","navigation/MainNavigator.js","App.js","index.js"],"names":["SHOW_QUIZZES","LOAD_QUIZZES","SET_SELECTED","SET_DONE","CLEAR_QUIZ","LOAD_QUIZZES_ERROR","clearQuiz","type","loadQuizzesError","payload","initialState","status","message","quiz","questions","LOAD_RESULTS","LOAD_RESULTS_SUCCESS","LOAD_RESULTS_ERROR","loadResultsError","results","SAVE_ANSWERS","name","answers","LOAD_QUIZ_LIST","SHOW_QUIZ_LIST","LOAD_QUIZ_LIST_ERROR","showQuizList","ADD_NEW_QUIZ","addedQuizzes","state","action","ADD_USER","DELETE_USER","LOGIN_SUCCESS","LOGOUT_SUCCESS","ERROR","req_error","error","loggedIn","user","editing_key","id","add_user","data","dude","LOAD_QUIZ_RATING","LOAD_QUIZ_RATING_SUCCESS","LOAD_QUIZ_RATING_ERROR","loadQuizRatingError","quiz_results","ADD_TEST","ADD_TEST_SUCCESS","ADD_TEST_ERROR","RESET_TEST","add_test_error","combineReducers","quizzes","newArray","map","item","newChoices","choices","i","isSelected","isDone","newObj","found","find","element","question","index","indexOf","newobj","newState","foundQ","indexQ","foundA","answ","indexA","is_multiple_choice","newAnswers","push","answer","quiz_list","addedQuizes","add_test","quiz_rating","workerLoadData","watchLoadData","fetchData","p","Axios","get","call","put","takeEvery","console","log","SEND_ANSWERS","workerSendData","watchSendData","sendAnswers","obj","post","reqObj","dude_id","question_id","choices_id","filter","watchLoadQuizList","watchSendNewTest","sendTest","axios","method","url","res","workerLogin","watchLogin","workerLogout","watchLogout","login","req","logout","key","watchLoadResults","watchLoadQuizRating","workerGetQuizRating","quizId","sagaMiddleware","createSagaMiddleware","persistedState","serializedState","localStorage","getItem","JSON","parse","err","loadState","store","createStore","rootReducer","compose","applyMiddleware","run","subscribe","stringify","setItem","saveState","getState","Header","dispatch","useDispatch","userr","useSelector","useState","header","setHeader","overlay","setOverlay","className","onClick","to","style","minWidth","length","delete_user","Loader","class","HomeScreen","input","setInput","history","useHistory","privat_input","setPrivat_input","useEffect","value","onChange","e","target","placeholder","onKeyPress","code","test","quiz_name","toLowerCase","trim","qz","questions_count","React","memo","ListQuiz","handleSelect","selectedQuestion","finishTest","wording","href","Question","text","imageUrl","content","setContent","handleSelectItem","width","src","picture","disabled","checked","htmlFor","preventDefault","document","getElementsByClassName","classList","toggle","remove","useParams","setSelectedQuestion","selectedAnswers","setSelectedAnswers","stateToQuestionName","image","multiple","Result","pass_date","rating","Date","toLocaleDateString","Math","round","ErrorComponent","ResultsScreen","userLogged","UserScreen","ref","useRef","seterror","submit","current","Choice","choise_id","deleteAnswer","for","color","fontSize","margin","QuestionComponent","addAnswers","deleteQuestion","setImage","setId","setKey","loader","setLoader","selectedFile","formdata","FormData","append","headers","then","catch","sendImages","files","rows","el","AddQuizScreen","test_status","choises","isCorect","array","setArray","errors","entity","chId","arr","delA","delC","prevArray","elQ","n","inputs","querySelectorAll","Array","from","forEach","armel","split","parseInt","toString","quiz_id","msg","temp","createElement","tempMsg","createTextNode","appendChild","body","select","execCommand","removeChild","TestDoneScreen","MainNavigator","exact","path","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.913c07ed.chunk.js","sourcesContent":["export const SHOW_QUIZZES = \"QUIZ/SHOW_QUIZZES\";\r\nexport const LOAD_QUIZZES = \"QUIZ/LOAD_QUIZZES\";\r\nexport const SET_SELECTED = \"QUIZ/SET_SELECTED\";\r\nexport const SET_DONE = \"QUIZ/SET_DONE\";\r\nexport const CLEAR_QUIZ = \"QUIZ/CLEAR_QUIZ\";\r\nexport const LOAD_QUIZZES_ERROR = \"QUIZ/LOAD_QUIZZES_ERROR\";\r\n\r\nexport const clearQuiz = () => {\r\n  return {\r\n    type: CLEAR_QUIZ,\r\n  };\r\n};\r\n\r\nexport const setSelected = (payload) => {\r\n  return {\r\n    type: SET_SELECTED,\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const setDone = (payload) => {\r\n  return {\r\n    type: SET_DONE,\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const showQuizzes = (payload) => {\r\n  return {\r\n    type: SHOW_QUIZZES,\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const loadQuizzes = (payload) => {\r\n  return {\r\n    type: LOAD_QUIZZES,\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const loadQuizzesError = (payload) => {\r\n  return {\r\n    type: LOAD_QUIZZES_ERROR,\r\n    payload,\r\n  };\r\n};\r\n","import {\r\n  SHOW_QUIZZES,\r\n  SET_SELECTED,\r\n  SET_DONE,\r\n  CLEAR_QUIZ,\r\n  LOAD_QUIZZES_ERROR,\r\n} from \"../../actions/show_quizzes\";\r\n\r\nconst initialState = {\r\n  status: null,\r\n  message: null,\r\n  quiz: {},\r\n  questions: [],\r\n};\r\n// eslint-disable-next-line\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case CLEAR_QUIZ:\r\n      return { ...initialState };\r\n    case SHOW_QUIZZES:\r\n      const newArray = action.payload.data.questions.map((item) => {\r\n        let newChoices = item.choices.map((i) => ({ ...i, isSelected: false }));\r\n        item.choices = newChoices;\r\n        item.isDone = false;\r\n        return item;\r\n      });\r\n      const newObj = {\r\n        status: action.payload.status,\r\n        questions: newArray,\r\n        quiz: action.payload.data.quiz,\r\n      };\r\n      return newObj;\r\n    case SET_DONE:\r\n      ///TODO REFUCKTOR\r\n      const found = state.questions.find(\r\n        (element) => element.question.id === action.payload\r\n      );\r\n      const index = state.questions.indexOf(found);\r\n      const newobj = { ...state };\r\n      newobj.questions[index].isDone = true;\r\n\r\n      return { ...newobj };\r\n    case SET_SELECTED:\r\n      ///TODO REFUCKTOR\r\n      const newState = { ...state };\r\n      const foundQ = newState.questions.find(\r\n        (element) => element.question.id === action.payload.id\r\n      );\r\n      const indexQ = newState.questions.indexOf(foundQ);\r\n      //newState.questions[indexQ].choices.map((i) => );\r\n      const foundA = newState.questions[indexQ].choices.find((element) => {\r\n        return element.id === action.payload.answ;\r\n      });\r\n      const indexA = newState.questions[indexQ].choices.indexOf(foundA);\r\n      if (!newState.questions[indexQ].question.is_multiple_choice) {\r\n        let newChoices = newState.questions[indexQ].choices.map((i) => ({\r\n          ...i,\r\n          isSelected: false,\r\n        }));\r\n\r\n        newState.questions[indexQ].choices = newChoices;\r\n      }\r\n\r\n      newState.questions[indexQ].choices[indexA].isSelected = !newState\r\n        .questions[indexQ].choices[indexA].isSelected;\r\n      return { ...newState };\r\n    case LOAD_QUIZZES_ERROR:\r\n      return { ...initialState, status: 404, message: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const LOAD_RESULTS = \"RESULT/LOAD_RESULTS\";\r\nexport const LOAD_RESULTS_SUCCESS = \"RESULT/LOAD_RESULTS_SUCCESS\";\r\nexport const LOAD_RESULTS_ERROR = \"RESULT/LOAD_RESULTS_ERROR\";\r\nexport const loadResults = (payload) => {\r\n  return {\r\n    type: LOAD_RESULTS,\r\n    payload,\r\n  };\r\n};\r\nexport const loadResultsSuccess = (payload) => {\r\n  return {\r\n    type: LOAD_RESULTS_SUCCESS,\r\n    payload,\r\n  };\r\n};\r\nexport const loadResultsError = (payload) => {\r\n  return {\r\n    type: LOAD_RESULTS_ERROR,\r\n    payload,\r\n  };\r\n};\r\n","import {\r\n  LOAD_RESULTS_ERROR,\r\n  LOAD_RESULTS_SUCCESS,\r\n} from \"../../actions/results\";\r\n\r\nconst initialState = {\r\n  status: null,\r\n  results: [],\r\n  message: \"\",\r\n};\r\n\r\n// eslint-disable-next-line\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case LOAD_RESULTS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        results: [...action.payload.data.dude.results],\r\n        status: 200,\r\n      };\r\n    case LOAD_RESULTS_ERROR:\r\n      return {\r\n        ...state,\r\n        message: action.payload.message,\r\n        status: 400,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const SAVE_ANSWERS = \"ANSWERS/SAVE_ANSWERS\";\r\n\r\nexport const saveAnswers = (payload) => {\r\n  return {\r\n    type: SAVE_ANSWERS,\r\n    payload,\r\n  };\r\n};\r\n","import { SAVE_ANSWERS } from \"../../actions/save_answers\";\r\nimport {} from \"../../actions/show_quizzes\";\r\n\r\nconst initialState = {\r\n  name: null,\r\n  answers: [],\r\n};\r\n// eslint-disable-next-line\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SAVE_ANSWERS:\r\n      const newAnswers = [...state.answers];\r\n      newAnswers.push(action.payload.answer);\r\n      return {\r\n        name: action.payload.name,\r\n        answers: newAnswers,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const LOAD_QUIZ_LIST = \"QUIZ/LOAD_QUIZ_LIST\";\r\nexport const SHOW_QUIZ_LIST = \"QUIZ/SHOW_QUIZ_LIST\";\r\nexport const LOAD_QUIZ_LIST_ERROR = \"QUIZ/LOAD_QUIZ_LIST_ERROR\";\r\n\r\nexport const showQuizList = (payload) => {\r\n  return {\r\n    type: SHOW_QUIZ_LIST,\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const loadQuizList = () => {\r\n  return {\r\n    type: LOAD_QUIZ_LIST,\r\n  };\r\n};\r\n\r\nexport const loadQuizListError = (payload) => {\r\n  return {\r\n    type: LOAD_QUIZ_LIST_ERROR,\r\n    payload,\r\n  };\r\n};\r\n","import {\r\n  LOAD_QUIZ_LIST_ERROR,\r\n  SHOW_QUIZ_LIST,\r\n} from \"../../actions/load_quiz_list\";\r\n\r\nconst initialState = { status: null, message: null };\r\n// eslint-disable-next-line\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SHOW_QUIZ_LIST:\r\n      return { ...state, ...action.payload };\r\n    case LOAD_QUIZ_LIST_ERROR:\r\n      return {\r\n        status: action.payload.status,\r\n        message: action.payload.message,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const ADD_NEW_QUIZ = \"QUIZ/ADD_NEW_QUIZ\"; \r\n\r\nexport const addedQuiz = (data) => {\r\n    return {\r\n      type: ADD_NEW_QUIZ,\r\n      payload: data,\r\n    };\r\n  };","import { ADD_NEW_QUIZ } from \"../../actions/add_quizze\";\r\n\r\nconst addedQuizzes = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ADD_NEW_QUIZ:\r\n      return { ...state, ...action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default addedQuizzes;\r\n","export const ADD_USER = \"USER/ADD_USER\";\r\nexport function add_user(user) {\r\n  return {\r\n    type: ADD_USER,\r\n    payload: user,\r\n  };\r\n}\r\nexport const DELETE_USER = \"USER/DELETE_USER\";\r\nexport function delete_user(user) {\r\n  return {\r\n    type: DELETE_USER,\r\n    payload: user,\r\n  };\r\n}\r\nexport const LOGIN_SUCCESS = \"USER/LOGIN_SUCCESS\";\r\nexport function login_success(data) {\r\n  return {\r\n    type: LOGIN_SUCCESS,\r\n    payload: data,\r\n  };\r\n}\r\n\r\nexport const LOGOUT_SUCCESS = \"USER/LOGOUT_SUCCESS\";\r\nexport function logout_success(data) {\r\n  return {\r\n    type: LOGOUT_SUCCESS,\r\n    payload: data,\r\n  };\r\n}\r\nexport const ERROR = \"USER/ERROR\";\r\nexport function req_error(error) {\r\n  return {\r\n    type: ERROR,\r\n    payload: error,\r\n  };\r\n}\r\n","import {\r\n  ADD_USER,\r\n  ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGOUT_SUCCESS,\r\n} from \"../../actions/add_user\";\r\n\r\nconst initialState = {\r\n  loggedIn: false,\r\n  user: {\r\n    editing_key: \"\",\r\n    id: \"\",\r\n    name: \"\",\r\n  },\r\n  status: null,\r\n  message: null,\r\n};\r\n//eslint-disable-next-line\r\nconst add_user = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loggedIn: true,\r\n        user: { ...action.payload.data.dude },\r\n        status: 200,\r\n      };\r\n    case LOGOUT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loggedIn: false,\r\n        user: {\r\n          editing_key: \"\",\r\n          id: \"\",\r\n          name: \"\",\r\n        },\r\n        status: 200,\r\n      };\r\n    case ERROR:\r\n      return {\r\n        ...state,\r\n        message: action.payload.message,\r\n        status: 400,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default add_user;\r\n","export const LOAD_QUIZ_RATING = \"RESULT/LOAD_QUIZ_RATING\";\r\nexport const LOAD_QUIZ_RATING_SUCCESS = \"RESULT/LOAD_QUIZ_RATING_SUCCESS\";\r\nexport const LOAD_QUIZ_RATING_ERROR = \"RESULT/LOAD_QUIZ_RATING_ERROR\";\r\n\r\nexport const loadQuizRating = (payload) => {\r\n    return {\r\n      type: LOAD_QUIZ_RATING,\r\n      payload,\r\n    };\r\n  };\r\n\r\n  export const loadQuizRatingSuccess = (payload) => {\r\n    return {\r\n      type: LOAD_QUIZ_RATING_SUCCESS,\r\n      payload,\r\n    };\r\n  };\r\n\r\n  export const loadQuizRatingError = (payload) => {\r\n    //console.log(payload);\r\n    return {\r\n      type: LOAD_QUIZ_RATING_ERROR,\r\n      payload,\r\n    };\r\n  };","import { LOAD_QUIZ_RATING_ERROR, LOAD_QUIZ_RATING_SUCCESS } from \"../../actions/get_quiz_rating\";\r\n\r\n\r\nconst initialState = {\r\n    status: null,\r\n    quiz_results: [],\r\n    message: \"\",\r\n  };\r\n\r\n  export default (state = initialState, action) => {\r\n    switch (action.type) {\r\n      case LOAD_QUIZ_RATING_SUCCESS:\r\n        return {\r\n          \r\n          ...state,\r\n          quiz_results: [...action.payload.data.results],\r\n          status: 200,\r\n        };\r\n      case LOAD_QUIZ_RATING_ERROR:\r\n        return {\r\n          ...state,\r\n          message: action.payload,\r\n          status: 400,\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  };","export const ADD_TEST = \"TEST/ADD_TEST\";\r\nexport const ADD_TEST_SUCCESS = \"TEST/ADD_TEST_SUCCESS\";\r\nexport const ADD_TEST_ERROR = \"TEST/ADD_TEST_ERROR\";\r\nexport const RESET_TEST = \"TEST/RESET_TEST\";\r\n\r\nexport function add_test(test) {\r\n  return {\r\n    type: ADD_TEST,\r\n    payload: test,\r\n  };\r\n}\r\nexport function add_test_success(payload) {\r\n  return {\r\n    type: ADD_TEST_SUCCESS,\r\n    payload,\r\n  };\r\n}\r\nexport function add_test_error(payload) {\r\n  return {\r\n    type: ADD_TEST_ERROR,\r\n    payload,\r\n  };\r\n}\r\nexport function reset_add_test() {\r\n  return {\r\n    type: RESET_TEST,\r\n  };\r\n}\r\n","import {\r\n  ADD_TEST_SUCCESS,\r\n  ADD_TEST_ERROR,\r\n  RESET_TEST,\r\n} from \"../../actions/add_test\";\r\n\r\nconst initialState = {\r\n  status: \"idle\",\r\n  message: ''\r\n};\r\n//eslint-disable-next-line\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_TEST_SUCCESS:\r\n      return {\r\n        ...state,\r\n        status: action.payload.status,\r\n        action: action.payload.data,\r\n      };\r\n    case ADD_TEST_ERROR:\r\n      return {\r\n        status: 404,\r\n        message: action.payload,\r\n      };\r\n\r\n    case RESET_TEST:\r\n      return { ...initialState };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport quizzes from \"./quizzes/quizzes\";\r\nimport results from \"./results/results\";\r\nimport answers from \"./answers/answer\";\r\nimport quiz_list from \"./quiz_list/quiz_list\";\r\nimport addedQuizes from \"./addedQuizes/addedQuizes\";\r\nimport user from \"./add_user/add_user.js\";\r\nimport quiz_rating from \"./quiz_rating/quiz_rating\";\r\nimport add_test from \"./add_test\";\r\nexport default combineReducers({\r\n  quizzes,\r\n  results,\r\n  answers,\r\n  quiz_list,\r\n  addedQuizes,\r\n  user,\r\n  add_test,\r\n  quiz_rating,\r\n});\r\n","import Axios from \"axios\";\r\nimport { takeEvery, call, put } from \"redux-saga/effects\";\r\nimport {\r\n  loadQuizzesError,\r\n  LOAD_QUIZZES,\r\n  showQuizzes,\r\n} from \"../actions/show_quizzes\";\r\n\r\nconst fetchData = (p) => Axios.get(`https://questimie.herokuapp.com/api/${p}`);\r\n\r\nfunction* workerLoadData(action) {\r\n  try {\r\n    const data = yield call(fetchData, action.payload);\r\n    yield put(showQuizzes(data));\r\n  } catch (e) {\r\n    yield put(loadQuizzesError(e.message));\r\n  }\r\n}\r\n\r\nexport function* watchLoadData() {\r\n  try {\r\n    yield takeEvery(LOAD_QUIZZES, workerLoadData);\r\n  } catch (e) {\r\n     console.log(e);\r\n  }\r\n}\r\n","export const SEND_ANSWERS = \"ANSWERS/SEND_ANSWERS\";\r\n// export const SHOW_RESULTS = \"RESULT/SHOW_RESULTS\";\r\n\r\nexport const sendAnswers = (payload) => {\r\n  return {\r\n    type: SEND_ANSWERS,\r\n    payload,\r\n  };\r\n};\r\n\r\n// export const showResult = (payload) => {\r\n//   return {\r\n//     type: SHOW_RESULTS,\r\n//     payload,\r\n//   };\r\n// };\r\n","import Axios from \"axios\";\r\nimport { takeEvery, call, put } from \"redux-saga/effects\";\r\nimport { addResults } from \"../actions/results\";\r\nimport { SEND_ANSWERS } from \"../actions/send_answers\";\r\n\r\nconst sendAnswers = ({ obj, id }) =>\r\n  Axios.post(`https://questimie.herokuapp.com/api/${id}/answer/`, obj);\r\n\r\n//TODO NORMAL USER\r\n\r\nfunction* workerSendData(action) {\r\n  const reqObj = {\r\n    dude_id: action.payload.user,\r\n    answers: action.payload.obj.map((item) => ({\r\n      question_id: item.question.id,\r\n      choices_id: item.choices\r\n        .filter((i) => i.isSelected)\r\n        .map((i) => {\r\n          return i.id;\r\n        }),\r\n    })),\r\n  };\r\n  const res = yield call(sendAnswers, { obj: reqObj, id: action.payload.id });\r\n}\r\n\r\nexport function* watchSendData() {\r\n  try {\r\n    yield takeEvery(SEND_ANSWERS, workerSendData);\r\n  } catch (e) {\r\n    ///\r\n  }\r\n}\r\n//const jsonData = `{\"quiz\":{\"id\":1,\"quiz_name\":\"First quiz\",\"creation_date\":\"2020-12-15T11:32:27.153608+02:00\"},\"questions\":[[{\"question\":{\"id\":1,\"quiz_id\":1,\"wording\":\"Whats up?\",\"text\":\"\",\"image\":\"\",\"is_multiple_choice\":false},\"choices\":[{\"id\":1,\"question_id\":1,\"text\":\"Good\"},{\"id\":2,\"question_id\":1,\"text\":\"Could be better\"},{\"id\":3,\"question_id\":1,\"text\":\"Bad\"}]}],[{\"question\":{\"id\":2,\"quiz_id\":1,\"wording\":\"Do you like this\",\"text\":\"\",\"image\":\"\",\"is_multiple_choice\":false},\"choices\":[{\"id\":4,\"question_id\":2,\"text\":\"Yep\"},{\"id\":5,\"question_id\":2,\"text\":\"Could be better\"},{\"id\":6,\"question_id\":2,\"text\":\"Nope\"}]}]]}`;\r\n//console.log(JSON.parse(jsonData));\r\n","import Axios from \"axios\";\r\nimport { takeEvery, call, put } from \"redux-saga/effects\";\r\nimport { LOAD_QUIZ_LIST, showQuizList } from \"../actions/load_quiz_list\";\r\n\r\nconst fetchData = () => Axios.get(\"https://questimie.herokuapp.com/api/\");\r\n\r\nfunction* workerLoadData() {\r\n  try {\r\n    const data = yield call(fetchData);\r\n    yield put(showQuizList(data));\r\n  } catch (e) {\r\n    yield put(showQuizList({ status: 404, message: e.message }));\r\n  }\r\n}\r\n\r\nexport function* watchLoadQuizList() {\r\n  try {\r\n    yield takeEvery(LOAD_QUIZ_LIST, workerLoadData);\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n","export const loadState = () => {\r\n  try {\r\n    const serializedState = localStorage.getItem(\"state\");\r\n    if (serializedState === null) {\r\n      return [];\r\n    }\r\n    return JSON.parse(serializedState);\r\n  } catch (err) {\r\n    return undefined;\r\n  }\r\n};\r\n\r\n//TODO\r\n//SAVE USER NAME\r\n//SAVE RESULTS FOR THIS NAME\r\nexport const saveState = (state) => {\r\n  try {\r\n    const serializedState = JSON.stringify({\r\n      user: { ...state.user, message: \"\", status: null },\r\n    });\r\n    //const serializedState = JSON.stringify({ });\r\n    localStorage.setItem(\"state\", serializedState);\r\n  } catch {\r\n  }\r\n};\r\n","import axios from \"axios\";\r\nimport { takeEvery, call, put } from \"redux-saga/effects\";\r\nimport {\r\n  ADD_TEST,\r\n  add_test_error,\r\n  add_test_success,\r\n} from \"../actions/add_test\";\r\n\r\nconst sendTest = (quiz) => {\r\n  return axios({\r\n    method: \"post\",\r\n    url: \"https://questimie.herokuapp.com/api/\",\r\n    data: quiz,\r\n  });\r\n};\r\nfunction* workerSendData(action) {\r\n  try {\r\n    const res = yield call(sendTest, { quiz: action.payload });\r\n    //const img_res = yield call(sendImages, { images: [] });\r\n    yield put(add_test_success(res));\r\n  } catch (e) {\r\n    yield put(add_test_error(e));\r\n  }\r\n}\r\n\r\nexport function* watchSendNewTest() {\r\n  try {\r\n    yield takeEvery(ADD_TEST, workerSendData);\r\n  } catch (e) {\r\n    ///\r\n  }\r\n}\r\n","import axios from \"axios\";\r\nimport { takeEvery, call, put } from \"redux-saga/effects\";\r\nimport {\r\n  ADD_USER,\r\n  DELETE_USER,\r\n  login_success,\r\n  req_error,\r\n  logout_success,\r\n} from \"../actions/add_user\";\r\n\r\nconst login = (name) => {\r\n  const req = {\r\n    name: name,\r\n  };\r\n  return axios({\r\n    method: \"post\",\r\n    url: \"https://questimie.herokuapp.com/api/dude\",\r\n    data: { dude: req },\r\n  });\r\n};\r\n\r\nconst logout = ({ id, key }) => {\r\n  const req = { editing_key: key };\r\n  return axios({\r\n    method: \"delete\",\r\n    url: `https://questimie.herokuapp.com/api/dude/${id}`,\r\n    data: req,\r\n  });\r\n};\r\n\r\nfunction* workerLogin(action) {\r\n  try {\r\n    const res = yield call(login, action.payload);\r\n    yield put(login_success(res));\r\n  } catch (e) {\r\n    yield put(req_error(e));\r\n  }\r\n}\r\nexport function* watchLogin() {\r\n  try {\r\n    yield takeEvery(ADD_USER, workerLogin);\r\n  } catch (e) {}\r\n}\r\nfunction* workerLogout(action) {\r\n  try {\r\n    const res = yield call(logout, { ...action.payload });\r\n    yield put(logout_success(res));\r\n  } catch (e) {\r\n    yield put(req_error(e));\r\n  }\r\n}\r\n\r\nexport function* watchLogout() {\r\n  try {\r\n    yield takeEvery(DELETE_USER, workerLogout);\r\n  } catch (e) {\r\n    ///\r\n  }\r\n}\r\n","import Axios from \"axios\";\r\nimport { takeEvery, call, put } from \"redux-saga/effects\";\r\nimport {\r\n  loadResultsError,\r\n  loadResultsSuccess,\r\n  LOAD_RESULTS,\r\n} from \"../actions/results\";\r\n\r\nconst fetchData = (id) =>\r\n  Axios({\r\n    method: \"get\",\r\n    url: `https://questimie.herokuapp.com/api/dude/${id}`,\r\n  });\r\n\r\nfunction* workerLoadData(action) {\r\n  try {\r\n    const data = yield call(fetchData, action.payload);\r\n    yield put(loadResultsSuccess(data));\r\n  } catch (e) {\r\n    yield put(loadResultsError(e));\r\n  }\r\n}\r\nexport function* watchLoadResults() {\r\n  try {\r\n    yield takeEvery(LOAD_RESULTS, workerLoadData);\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n","import Axios from \"axios\";\r\nimport { takeEvery, call, put } from \"redux-saga/effects\";\r\nimport { loadQuizRatingError, loadQuizRatingSuccess, LOAD_QUIZ_RATING } from \"../actions/get_quiz_rating\";\r\n\r\nconst fetchData = (quizId) => Axios({\r\n    method: \"get\",\r\n    url: `https://questimie.herokuapp.com/api/${quizId}/answer/`,\r\n  });\r\n\r\nexport function* watchLoadQuizRating() {\r\n    try {\r\n      yield takeEvery(LOAD_QUIZ_RATING, workerGetQuizRating);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  function* workerGetQuizRating(action) {\r\n    try {\r\n      const data = yield call(fetchData, action.payload);\r\n      yield put(loadQuizRatingSuccess(data));\r\n    } catch (e) {\r\n      yield put(loadQuizRatingError(e));\r\n    }\r\n  }","import { applyMiddleware, compose, createStore } from \"redux\";\r\nimport rootReducer from \"./reducers\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport { watchLoadData } from \"./sagas/quizzes\";\r\nimport { watchSendData } from \"./sagas/answers\";\r\nimport { watchLoadQuizList } from \"./sagas/load_quizlist\";\r\nimport { loadState, saveState } from \"./sessionStorage\";\r\nimport { watchSendNewTest } from \"./sagas/addTest\";\r\nimport { watchLogin, watchLogout } from \"./sagas/authUser\";\r\nimport { watchLoadResults } from \"./sagas/results\";\r\nimport { watchLoadQuizRating } from \"./sagas/getQuizRating\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nexport const persistedState = loadState();\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  persistedState,\r\n  compose(\r\n    applyMiddleware(sagaMiddleware)\r\n   // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  )\r\n);\r\n\r\nsagaMiddleware.run(watchLoadData);\r\nsagaMiddleware.run(watchSendData);\r\nsagaMiddleware.run(watchLoadQuizList);\r\nsagaMiddleware.run(watchSendNewTest);\r\nsagaMiddleware.run(watchLoadResults);\r\nsagaMiddleware.run(watchLogin);\r\nsagaMiddleware.run(watchLogout);\r\nsagaMiddleware.run(watchLoadQuizRating);\r\n\r\nexport default store;\r\n\r\nstore.subscribe(() => {\r\n  saveState(store.getState());\r\n});\r\n","import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./styles.css\";\r\nimport { delete_user } from \"../../redux/actions/add_user\";\r\n\r\nexport default function Header() {\r\n  const dispatch = useDispatch();\r\n  const userr = useSelector((state) => state.user);\r\n\r\n  const handleLogout = () => {\r\n    if (userr.user.editing_key.length) {\r\n      dispatch(delete_user({ id: userr.user.id, key: userr.user.editing_key }));\r\n    }\r\n  };\r\n\r\n  const [header, setHeader] = useState(\"\");\r\n  const [overlay, setOverlay] = useState(\"\");\r\n  function burger() {\r\n    setHeader(header == \"\" ? \"active\" : \"\");\r\n    setOverlay(overlay == \"\" ? \"overlay_active\" : \"\");\r\n  }\r\n\r\n  function over() {\r\n    setHeader(header == \"\" ? \"active\" : \"\");\r\n    setOverlay(overlay == \"\" ? \"overlay_active\" : \"\");\r\n  }\r\n\r\n  const user = useSelector((state) => state.user.user.name);\r\n  return (\r\n    <header className=\"header\">\r\n      <div className={`overlay ${overlay}`} onClick={over}></div>\r\n      <div className=\"header__body\">\r\n        <Link to=\"/\" className=\"header__logo\">\r\n          <p>\r\n            <span>Q</span>TEST\r\n          </p>\r\n        </Link>\r\n\r\n        <nav className={`header__menu ${header}`}>\r\n          <ul className=\"header__list\">\r\n            <li>\r\n              <Link to=\"/add\" className=\"header__link\">\r\n                Создать тест\r\n              </Link>\r\n            </li>\r\n            {/* <li>\r\n              <Link to=\"#\" className=\"header__link\">\r\n                Приложение\r\n              </Link>\r\n            </li> */}\r\n          </ul>\r\n        </nav>\r\n        {user && (\r\n          <div className=\"dropdown-container\">\r\n            <div className=\"dropdown\">\r\n              <p className=\"dropbtn\">\r\n                <p>{user}</p>\r\n              </p>\r\n              <div\r\n                className=\"dropdown-content\"\r\n                style={{ minWidth: user.length * 8 }}\r\n              >\r\n                <Link to=\"/results\">Результаты</Link>\r\n                <Link onClick={handleLogout} className=\"logout\">\r\n                  Вийти\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n        <div className={`header__burger ${header}`} onClick={burger}>\r\n          <span></span>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./styles/loader.css\";\r\n\r\nfunction Loader() {\r\n  return (\r\n    <div class=\"loader_container\">\r\n      <div></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Loader;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Loader from \"../../components/Loader\";\r\nimport { loadQuizList } from \"../../redux/actions/load_quiz_list\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./stylesforhomescreen/list.css\";\r\n\r\nfunction HomeScreen() {\r\n  const dispatch = useDispatch();\r\n  const quiz_list = useSelector((state) => state.quiz_list);\r\n  const [input, setInput] = useState(\"\");\r\n  const history = useHistory();\r\n  const [privat_input, setPrivat_input] = useState(\"\");\r\n\r\n  const user = useSelector((state) => state.user.loggedIn);\r\n  if (!user) {\r\n    history.push(\"/\");\r\n  }\r\n\r\n  useEffect(() => {\r\n    dispatch(loadQuizList());\r\n  }, [dispatch]);\r\n\r\n  const handleOnPress = (e) => {\r\n    if (e.code === \"Enter\") {\r\n      const id = e.target.value;\r\n      let re = /^((\\w){8})-((\\w){4})-((\\w){4})-((\\w){4})-((\\w){12})$/g;\r\n      if (re.test(id)) {\r\n        history.push(`/quiz/${e.target.value}`);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleOnClick = (e) => {\r\n    let re = /^((\\w){8})-((\\w){4})-((\\w){4})-((\\w){4})-((\\w){12})$/g;\r\n    if (re.test(privat_input)) {\r\n      history.push(`/quiz/${privat_input}`);\r\n    }\r\n  };\r\n\r\n  if (quiz_list.status === 200) {\r\n    return (\r\n      <div className=\"content_container_home\">\r\n        <div className=\"content__home\">\r\n          <div className=\"title_container_home\">\r\n            <p>Список тестов</p>\r\n          </div>\r\n          <form>\r\n            <div className=\"search_container\">\r\n              <div className=\"icon\">\r\n                <div></div>\r\n              </div>\r\n              <input\r\n                id=\"text\"\r\n                value={input}\r\n                onChange={(e) => setInput(e.target.value)}\r\n                type=\"text\"\r\n                className=\"text-input\"\r\n                placeholder=\"Поиск теста\"\r\n              />\r\n            </div>\r\n            <div class=\"private_container\">\r\n              <div className=\"icon\">\r\n                <div></div>\r\n              </div>\r\n              <input\r\n                type=\"text\"\r\n                className=\"text-input\"\r\n                id=\"text_private\"\r\n                onKeyPress={handleOnPress}\r\n                value={privat_input}\r\n                onChange={(e) => setPrivat_input(e.target.value)}\r\n                placeholder=\"Ввести ID приватного теста\"\r\n              />\r\n              <div onClick={handleOnClick} class=\"private_search\">\r\n                <div></div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n\r\n          {quiz_list.data.quizzes\r\n            .filter((e) => {\r\n              if (input.length) {\r\n                return !e.quiz_name\r\n                  .toLowerCase()\r\n                  .indexOf(input.trim().toLowerCase(), 0);\r\n              } else {\r\n                return true;\r\n              }\r\n            })\r\n            .map((qz) => {\r\n              return (\r\n                <div className=\"quizbox_container\" key={qz.id}>\r\n                  <Link className=\"quizbox__\" to={`/quiz/${qz.id}`}>\r\n                    <div className=\"quiz-title\">\r\n                      <p>{qz.quiz_name}</p>\r\n                    </div>\r\n                    <div className=\"quiz-quantity\">\r\n                      <p>Кол-во вопросов: {qz.questions_count}</p>\r\n                    </div>\r\n                  </Link>\r\n                </div>\r\n              );\r\n            })}\r\n        </div>\r\n      </div>\r\n    );\r\n  } else if (quiz_list.status === 404) {\r\n    return <p>ERROR: {quiz_list.message}</p>;\r\n  } else {\r\n    return <Loader />;\r\n  }\r\n}\r\nexport default React.memo(HomeScreen);\r\n","import React from 'react';\r\nimport Loader from './Loader';\r\nimport PropTypes from 'prop-types'; // ES6\r\nimport './styles/style.css';\r\n\r\nfunction ListQuiz({ state, handleSelect, selectedQuestion, finishTest }) {\r\n\tif (state.length) {\r\n\t\treturn (\r\n\t\t\t<div className=\"leftbar\">\r\n\t\t\t\t<div className=\"quizlist\">\r\n\t\t\t\t\t{state &&\r\n\t\t\t\t\t\tstate.map((item, index) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\tclassName={`quizlist_item ${item.isDone ? 'voted' : 'unvoted'} ${\r\n\t\t\t\t\t\t\t\t\t\tselectedQuestion === index ? 'current' : ''\r\n\t\t\t\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<a key={index}>\r\n\t\t\t\t\t\t\t\t\t\t<span>{index + 1}</span>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<p className=\"quizlist_item_name\" onClick={() => handleSelect(index)}>\r\n\t\t\t\t\t\t\t\t\t\t\t{item.wording}\r\n\t\t\t\t\t\t\t\t\t\t</p>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className={'icon'}>\r\n\t\t\t\t\t\t\t\t\t\t\t<div></div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"complete-btn_container\">\r\n\t\t\t\t\t<a href=\"\" className=\"complete-btn\" onClick={finishTest}>\r\n\t\t\t\t\t\t<p>Завершить тест</p>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t} else {\r\n\t\treturn <Loader />;\r\n\t}\r\n}\r\n\r\nListQuiz.propTypes = {\r\n\thandleSelect: PropTypes.func,\r\n\tstate: PropTypes.func,\r\n\tselectedQuestion: PropTypes.number,\r\n};\r\n\r\nexport default React.memo(ListQuiz);\r\n","import React, { memo, useState } from \"react\";\r\nimport PropTypes from \"prop-types\"; // ES6\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setDone, setSelected } from \"../redux/actions/show_quizzes\";\r\nimport \"./styles/style.css\";\r\n\r\nconst Question = ({\r\n  isDone,\r\n  id,\r\n  text,\r\n  wording,\r\n  answers,\r\n  imageUrl,\r\n  selectedQuestion,\r\n  handleSelect\r\n}) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [content, setContent] = useState('')\r\n\r\n  const handleSelectItem = (e) => {\r\n    dispatch(setSelected({ answ: e.target.value, id }));\r\n \r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={`content ${content}`}>\r\n        <div className=\"quiz_body\">\r\n          <div className=\"title_container\">\r\n            <p>{`Вопрос №${selectedQuestion + 1}`}</p>\r\n          </div>\r\n          <div className=\"quizname\">\r\n            <p>{wording}</p>\r\n          </div>\r\n            {imageUrl && \r\n            <div className=\"image_container\">\r\n            <img width={550} src={imageUrl.picture} />\r\n            </div>\r\n            }\r\n          <div className=\"description_container\">\r\n            <p>{text}</p>\r\n          </div>\r\n          <div className=\"checkbox_container\">\r\n            {answers.map((item) => {\r\n              return (\r\n                <div className=\"checkbox\">\r\n                  <input\r\n                    disabled={isDone}\r\n                    onChange={handleSelectItem}\r\n                    checked={item.isSelected}\r\n                    value={item.id}\r\n                    id={item.id}\r\n                    type=\"checkbox\"\r\n                  />\r\n                  <label htmlFor={item.id}>                \r\n                    <p>{item.text}</p>\r\n                  </label>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          <div className=\"buttons_container\">\r\n            <input\r\n              type=\"button\"\r\n              className=\"button_vote button\"\r\n              value=\"Ответить\"\r\n              disabled={isDone}\r\n              onClick={() => {\r\n                dispatch(setDone(id));\r\n                handleSelect(selectedQuestion + 1)\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"list-btn_container\">\r\n        <a\r\n          className=\"list-btn\"\r\n          onClick={(e) => {\r\n            e.preventDefault();\r\n            document\r\n              .getElementsByClassName(\"leftbar\")[0]\r\n              .classList.toggle(\"leftbar_active\");\r\n            document\r\n              .getElementsByClassName(\"header__burger\")[0]\r\n              .classList.remove(\"active\");\r\n            document\r\n              .getElementsByClassName(\"header__menu\")[0]\r\n              .classList.remove(\"active\");\r\n            setContent(content == \"\" ? \"content_inactive\" : \"\")\r\n\r\n          }}\r\n        >\r\n          <p>Список</p>\r\n          <div className=\"arrow\">\r\n            <div className=\"arrow_icon\"></div>\r\n          </div>\r\n        </a>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nQuestion.propTypes = {\r\n  id: PropTypes.string,\r\n  wording: PropTypes.string,\r\n  text: PropTypes.string,\r\n  imageUrl: PropTypes.string,\r\n  answers: PropTypes.array,\r\n};\r\nexport default memo(Question);","import React, { memo, useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport ListQuiz from '../../components/ListQuiz';\r\nimport Loader from '../../components/Loader';\r\nimport Question from '../../components/Question';\r\nimport { clearQuiz, loadQuizzes } from '../../redux/actions/show_quizzes';\r\nimport { Context } from '../MainNavigator';\r\n\r\nexport default memo(function Quiz() {\r\n\tlet { id } = useParams();\r\n\tconst dispatch = useDispatch();\r\n\tconst state = useSelector((state) => state.quizzes);\r\n\tconst [selectedQuestion, setSelectedQuestion] = useState(0);\r\n\tconst [selectedAnswers, setSelectedAnswers] = useState([]);\r\n\tconst history = useHistory();\r\n\tconst found = state.questions.find((i) => i.isDone === false);\r\n\r\n\tconst user = useSelector((state) => state.user.loggedIn);\r\n\tif (!user) {\r\n\t\thistory.push('/');\r\n\t}\r\n\r\n\t//const handleFinish = () => history.push(`/done/${id}`);\r\n\r\n\tuseEffect(() => {\r\n\t\tdispatch(loadQuizzes(id));\r\n\t\treturn () => {\r\n\t\t\tdispatch(clearQuiz());\r\n\t\t};\r\n\t}, [dispatch, id]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!found && state.status === 200) {\r\n\t\t\thistory.push(`/done/${id}`);\r\n\t\t}\r\n\t}, [found, id, history, state.status]);\r\n\r\n\tconst handleAnswer = (answer) => {\r\n\t\tsetSelectedAnswers([...selectedAnswers, answer]);\r\n\t};\r\n\r\n\tconst handleSelect = (id) => {\r\n\t\t\r\n\t\tsetSelectedQuestion(id % stateToQuestionName().length) ;\r\n\t};\r\n\r\n\tconst stateToQuestionName = () =>\r\n\t\tstate.questions.map((i) => ({\r\n\t\t\twording: i.question.wording,\r\n\t\t\tisDone: i.isDone,\r\n\t\t}));\r\n\r\n\tif (state.status === 200) {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<ListQuiz\r\n\t\t\t\t\tselectedAnswers={selectedAnswers}\r\n\t\t\t\t\tstate={stateToQuestionName()}\r\n\t\t\t\t\thandleSelect={handleSelect}\r\n\t\t\t\t\tselectedQuestion={selectedQuestion}\r\n\t\t\t\t/>\r\n\t\t\t\t<Question\r\n\t\t\t\t\tselectedQuestion={selectedQuestion}\r\n\t\t\t\t\thandleSelect={handleSelect}\r\n\t\t\t\t\tisDone={state.questions[selectedQuestion].isDone}\r\n\t\t\t\t\tsetSelectedAnswers={handleAnswer}\r\n\t\t\t\t\timageUrl={state.questions[selectedQuestion].question.image}\r\n\t\t\t\t\tid={state.questions[selectedQuestion].question.id}\r\n\t\t\t\t\ttext={state.questions[selectedQuestion].question.text}\r\n\t\t\t\t\twording={state.questions[selectedQuestion].question.wording}\r\n\t\t\t\t\tanswers={state.questions[selectedQuestion].choices}\r\n\t\t\t\t\tmultiple={state.questions[selectedQuestion].question.is_multiple_choice}\r\n\t\t\t\t/>\r\n\t\t\t</>\r\n\t\t);\r\n\t} else if (state.status === 404) {\r\n\t\treturn <p>ERROR: {state.message}</p>;\r\n\t} else return <Loader />;\r\n});\r\n","import React from \"react\";\r\n\r\nexport default function Result({ pass_date, name, rating }) {\r\n  return (\r\n    <div className=\"quizbox_container\">\r\n      <div className=\"quizbox\">\r\n        <div className=\"quiz-info\">\r\n          <div className=\"quiz-title\">\r\n            <p>{name}</p>\r\n            <p>Дата складання: {new Date(pass_date).toLocaleDateString()}</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"quiz-result\">{Math.round(rating)}/100</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function ErrorComponent({ message }) {\r\n  return (\r\n    <div className=\"input-error_container\">\r\n      <p className=\"input-error\">*Ошибка</p>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loader from \"../../../components/Loader\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./Results.css\";\r\n//import { delete_user } from \"../../../redux/actions/add_user\";\r\nimport { loadResults } from \"../../../redux/actions/results\";\r\nimport Result from \"../../../components/Result/Result\";\r\nimport ErrorComponent from \"../../../components/ErrorComponent/Error\";\r\n\r\nexport default function ResultsScreen() {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const results = useSelector((state) => state.results);\r\n  const user = useSelector((state) => state.user);\r\n  const userLogged = useSelector((state) => state.user.loggedIn);\r\n\r\n  React.useEffect(() => {\r\n    if (!userLogged) {\r\n      history.push(\"/\");\r\n    }\r\n  }, [userLogged]);\r\n\r\n  // const handleLogout = () => {\r\n  //   if (user.user.editing_key.length) {\r\n  //     dispatch(delete_user({ id: user.user.id, key: user.user.editing_key }));\r\n  //   }\r\n  // };\r\n\r\n  React.useEffect(() => {\r\n    dispatch(loadResults(user.user.id));\r\n  }, []);\r\n\r\n\r\n  if (user.status === 400 && user.message.length) {\r\n    return <ErrorComponent message={user.message} />;\r\n  }\r\n\r\n  if (results.status === 200 || results.results.length) {\r\n    return (\r\n      <>\r\n        {/* <button onClick={handleLogout}>Logout</button> */}\r\n        <div className=\"content_container_results\">\r\n          <div className=\"content___\">\r\n            <div className=\"title_container\">\r\n              <p>Результаты</p>\r\n            </div>\r\n            {(results.results.length &&\r\n            results.results.map((i) => {\r\n              return (\r\n                <Result\r\n                  pass_date={i.pass_date}\r\n                  name={i.quiz.quiz_name}\r\n                  rating={i.rating * 100}\r\n                />\r\n              );\r\n            })) || <div className=\"title_container\">Сначала пройдите любой тест</div>}\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  } else {\r\n    return <Loader />;\r\n  }\r\n}\r\n\r\n","import React, { useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n//import { useDispatch } from 'react-redux';\r\nimport { add_user } from \"../../redux/actions/add_user.js\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ErrorComponent from \"../../components/ErrorComponent/Error.js\";\r\nimport \"./stylesforhomescreen/autorization.css\";\r\n\r\nexport const UserScreen = () => {\r\n  const ref = useRef(null);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const user = useSelector((state) => state.user.loggedIn);\r\n\r\n  const status = useSelector((state) => state.user.status);\r\n  const message = useSelector((state) => state.user.message);\r\n\r\n  if (user) {\r\n    history.push(\"/home\");\r\n  }\r\n  const [error, seterror] = React.useState(\"\");\r\n\r\n  const submit = () => {\r\n    if (ref.current.value.length) {\r\n      dispatch(add_user(ref.current.value));\r\n      ref.current.value = \"\";\r\n    } else {\r\n      seterror(\"Enter name\");\r\n    }\r\n  };\r\n\r\n  const handleName = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      submit();\r\n    }\r\n  };\r\n  const handleClickName = (e) => {\r\n    submit();\r\n  };\r\n\r\n  if (status === 400 && message.length) {\r\n    return <ErrorComponent message={message} />;\r\n  } else {\r\n    return (\r\n      <div className=\"content__auth\">\r\n        <div className=\"autorization_container\">\r\n          <div className=\"title_container\">\r\n            <p className=\"title\">\r\n              Для начала, пройдите нашу несложную авторизацию и получите доступ\r\n              к лучшим тестам\r\n            </p>\r\n          </div>\r\n          <div className=\"name-input_container\">\r\n            <input\r\n              ref={ref}\r\n              onKeyPress={handleName}\r\n              id=\"icon_prefix\"\r\n              type=\"text\"\r\n              className=\"text-input\"\r\n              placeholder=\"Введите имя\"\r\n            />\r\n          </div>\r\n          {error && <ErrorComponent />}\r\n          <div className=\"button_container\">\r\n            <input\r\n              onClick={() => {\r\n                handleClickName();\r\n              }}\r\n              type=\"button\"\r\n              className=\"button_vote button\"\r\n              value=\"Подтвердить\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\n","import React from \"react\";\r\nimport \"./global-slave.css\";\r\n\r\nfunction Choice({ question_id, choise_id, deleteAnswer }) {\r\n  return (\r\n    <div className=\"answer_container\">\r\n      <div className=\"checkbox\">\r\n        <input \r\n          name={`choice-is_correct-${question_id}-${choise_id}`}\r\n          type=\"checkbox\" \r\n          id={`checkbox_${question_id}-${choise_id}`} \r\n          className=\"inp\" />\r\n        <label for={`checkbox_${question_id}-${choise_id}`}></label>\r\n      </div>\r\n      <input \r\n      name={`choice-text-${question_id}-${choise_id}`}\r\n      type=\"text\" className=\"text-input\" placeholder={`Ответ ${choise_id+1}`} />\r\n      <p style={{color: \"red\", fontSize: \"25px\", margin: \"0 0 0 10px\"}} id={`btn_${question_id}-${choise_id}`} onClick={()=>deleteAnswer(question_id, 'choise_id', choise_id)}>×</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Choice;\r\n\r\n{\r\n  /* <Col>\r\n      <input\r\n        type=\"text\"\r\n        name={`choice-text-${question_id}-${choise_id}`}\r\n        placeholder=\"Название вопроса\"\r\n      />\r\n      <label>\r\n        <input\r\n          type=\"checkbox\"\r\n          name={`choice-is_correct-${question_id}-${choise_id}`}\r\n        />\r\n        <span>this true?</span>\r\n      </label>\r\n    </Col> */\r\n}\r\n","import Axios from \"axios\";\r\nimport React, { useState } from \"react\";\r\nimport Choice from \"./Choice\";\r\nimport \"./global-slave.css\";\r\n\r\nexport default function QuestionComponent({\r\n  addAnswers,\r\n  question_id,\r\n  choices,\r\n  deleteQuestion,\r\n  deleteAnswer,\r\n}) {\r\n  const [image, setImage] = useState(null);\r\n  const [id, setId] = useState(null);\r\n  const [key, setKey] = useState(null);\r\n  const [loader, setLoader] = useState(false);\r\n\r\n  function deleteImage() {\r\n    return Axios({\r\n      method: \"delete\",\r\n      url: `https://questimie.herokuapp.com/api/image/${id}`,\r\n      data: {\r\n        editing_key: key,\r\n      },\r\n    }).then((e) => {\r\n      setImage(null);\r\n      setId(null);\r\n      setKey(null);\r\n      console.log(e);\r\n    });\r\n  }\r\n\r\n  function del() {\r\n\t  deleteImage();\r\n\t  setLoader(false);\r\n  }\r\n\r\n  const sendImages = (selectedFile) => {\r\n    const formdata = new FormData();\r\n    formdata.append(\"picture\", selectedFile);\r\n    return Axios({\r\n      method: \"post\",\r\n      url: \"https://questimie.herokuapp.com/api/image\",\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n      data: formdata,\r\n    })\r\n      .then((e) => {\r\n        setKey(e.data.editing_key);\r\n        setImage(e.data.picture);\r\n        setId(e.data.id);\r\n      })\r\n      .catch((e) => console.log(e));\r\n  };\r\n  return (\r\n    <div className=\"question_container\">\r\n      <div className=\"question-title_container\">\r\n        <p>Вопрос {question_id + 1}</p>\r\n        <p\r\n          className=\"krestik\"\r\n          onClick={() => {\r\n            deleteQuestion(question_id, \"question_id\");\r\n          }}\r\n          id={`question-wording-${question_id}`}\r\n        >\r\n          ×\r\n        </p>\r\n      </div>\r\n      <div className=\"question-name_container\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"text-input\"\r\n          placeholder=\"Название вопроса\"\r\n          name={`question-wording-${question_id}`}\r\n        />\r\n      </div>\r\n\r\n      {!image && (\r\n        <div className=\"add-image_container\">\r\n          <div className=\"form-group\">\r\n            <input\r\n              onChange={(e) => {\r\n                setLoader(true);\r\n                console.log(\"ДЕБАГ РАКЕТА ЗАЛЕТАЄ :rocket:\", loader);\r\n                sendImages(e.target.files[0]);\r\n              }}\r\n              type=\"file\"\r\n              name={`question-file-${question_id}`}\r\n              id={`question-file-${question_id}`}\r\n              className=\"input-file\"\r\n            />\r\n            <label\r\n              htmlFor={`question-file-${question_id}`}\r\n              className=\"btn-tertiary\"\r\n            >\r\n              <div></div>\r\n              <span className=\"js-fileName\">Загрузить картинку</span>\r\n            </label>\r\n          </div>\r\n        </div>\r\n      )}\r\n      {(image && (\r\n        <div className=\"img_container\">\r\n          <div className=\"img-wrap\">\r\n            <img src={image} className=\"img\" />\r\n            <div\r\n              onClick={del}\r\n              className=\"del-img-btn\"\r\n            >\r\n              <div></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )) ||\r\n        (loader && (\r\n          <div class=\"loading-img_container\">\r\n            <div class=\"loading-img\">\r\n              <div></div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n\r\n      <div className=\"descr_container\">\r\n        <textarea\r\n          placeholder=\"Описание!\"\r\n          rows=\"6\"\r\n          className=\"descr\"\r\n          name={`question-text-${question_id}`}\r\n        ></textarea>\r\n      </div>\r\n      <input type=\"hidden\" value={id} name={`question-image-${question_id}`} />\r\n      <div className=\"answers_container\">\r\n        {choices.map((el) => {\r\n          return (\r\n            <Choice\r\n              question_id={question_id}\r\n              choise_id={el.choise_id}\r\n              deleteAnswer={deleteAnswer}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n      <div className=\"add-answer-button_container\">\r\n        <div\r\n          onClick={() => {\r\n            addAnswers(question_id);\r\n          }}\r\n          className=\"add-answer-button add-button button\"\r\n        >\r\n          <div className=\"add-img\">\r\n            <div></div>\r\n          </div>\r\n          <p>Добавить ответ</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { add_test, reset_add_test } from \"../../redux/actions/add_test\";\r\nimport QuestionComponent from \"../../components/Form/Question\";\r\nimport \"./styles/global-master.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./stylesforhomescreen/autorization.css\";\r\n\r\nexport default function AddQuizScreen() {\r\n  const dispatch = useDispatch();\r\n  const test_status = useSelector((state) => state.add_test);\r\n  const history = useHistory();\r\n  const [array, setArray] = useState([\r\n    {\r\n      question_id: 0,\r\n      choises: [\r\n        {\r\n          choise_id: 0,\r\n          isCorect: false,\r\n        },\r\n        {\r\n          choise_id: 1,\r\n          isCorect: false,\r\n        },\r\n      ],\r\n    },\r\n  ]);\r\n  const [errors, setErrors] = useState([])\r\n\r\n  function delC(id, arr, entity, chId) {\r\n    let choices = arr.map((item) => {\r\n      if (item.question_id == id) {\r\n        item.choises = delA(chId, item.choises, entity);\r\n      }\r\n      return item;\r\n    });\r\n    return choices;\r\n  }\r\n\r\n  function deleteAnswer(id, entity, chId) {\r\n    setArray(delC(id, array, entity, chId));\r\n  }\r\n\r\n  function delA(id, arr, entity) {\r\n    if (arr.length <= 1) {\r\n      return arr;\r\n    }\r\n    let a = arr.filter((item) => {\r\n      if (item[entity] < id) {\r\n        return item;\r\n      } else if (item[entity] == id) {\r\n        return;\r\n      } else if (item[entity] > id) {\r\n        item[entity] -= 1;\r\n        return item;\r\n      }\r\n    });\r\n    return a;\r\n  }\r\n\r\n  function deleteQuestion(id, entity) {\r\n    setArray(delA(id, array, entity));\r\n  }\r\n  const user = useSelector((state) => state.user.loggedIn);\r\n\r\n  if (!user) {\r\n    history.push(\"/\");\r\n  }\r\n  React.useEffect(() => {\r\n    return () => {\r\n      dispatch(reset_add_test());\r\n    };\r\n  }, [dispatch]);\r\n\r\n  function saveQuizName() {\r\n    const inputs = document.querySelectorAll(\"input, textarea\");\r\n    const data = {\r\n      quiz_name: \"\",\r\n      questions: [],\r\n    };\r\n    Array.from(inputs).forEach((el) => {\r\n      let armel = el.name.split(\"-\");\r\n      switch (armel[0]) {\r\n        case \"quiz\":\r\n          data[armel[1]] = el.value !== \"on\" ? el.value : el.checked;\r\n          break;\r\n        case \"question\":\r\n          if (data.questions[parseInt(armel[2])]) {\r\n            data.questions[parseInt(armel[2])][armel[1]] = el.checked\r\n              ? el.type == \"checkbox\"\r\n              : el.value;\r\n          } else {\r\n            data.questions[parseInt(armel[2])] = {\r\n              [armel[1]]: el.value !== \"on\" ? el.value : el.checked,\r\n              choices: [],\r\n            };\r\n          }\r\n          break;\r\n        case \"choice\":\r\n          if (\r\n            data.questions[parseInt(armel[2])][\"choices\"][parseInt(armel[3])]\r\n          ) {\r\n            data.questions[parseInt(armel[2])][\"choices\"][parseInt(armel[3])][\r\n              armel[1]\r\n            ] = el.value !== \"on\" ? el.value : el.checked;\r\n          } else {\r\n            data.questions[parseInt(armel[2])][\"choices\"][\r\n              parseInt(armel[3])\r\n            ] = {\r\n              [armel[1]]: el.value !== \"on\" ? el.value : el.checked,\r\n            };\r\n          }\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    });\r\n    // if(data.quiz_name.length) {\r\n    //   console.log(data)\r\n    //   data.questions.forEach(e=> {\r\n    //     if(e.wording.length) {\r\n    //       let find_true = []\r\n    //       e.choices.forEach((item => {\r\n    //           if(!item.text.length) {\r\n    //             alert(\"Нету вариантов ответа\")\r\n    //           } else {\r\n    //             if(item.is_correct) {\r\n    //               find_true.push(true)\r\n    //             } else if (!item.is_correct) {\r\n    //               find_true.push(false);\r\n    //             }\r\n    //             const found = find_true.find(element => element);\r\n    //             if(!found) {\r\n    //               alert(\"Нету прав. ответа\")\r\n    //             } else {\r\n    //               console.log(data);\r\n    //               //dispatch(add_test(data));\r\n    //             }\r\n    //           }\r\n    //       })); \r\n    //     } else {\r\n    //       alert(\"Нету вопроса\")\r\n    //     }\r\n    //     console.log(e);\r\n    //   })\r\n    // } else {\r\n    //   alert('Нету названия!')\r\n    // }\r\n  }\r\n\r\n  function addAnswers(el) {\r\n    setArray((prevArray) => [\r\n      ...prevArray.map((e) =>\r\n        e.question_id === el\r\n          ? {\r\n            ...e,\r\n            choises: [\r\n              ...e.choises,\r\n              {\r\n                choise_id:\r\n                  prevArray[el].choises[prevArray[el].choises.length - 1]\r\n                    .choise_id + 1,\r\n                isCorect: false,\r\n              },\r\n            ],\r\n          }\r\n          : e\r\n      ),\r\n    ]);\r\n  }\r\n\r\n  function nextQuestion(n) {\r\n    return {\r\n      question_id: n,\r\n      choises: [\r\n        {\r\n          choise_id: 0,\r\n          isCorect: false,\r\n        },\r\n        {\r\n          choise_id: 1,\r\n          isCorect: false,\r\n        },\r\n      ],\r\n    };\r\n  }\r\n\r\n  function addNewQuestion() {\r\n    setArray((prevArray) => [...prevArray, nextQuestion(prevArray.length)]);\r\n  }\r\n\r\n  if (test_status.status === \"idle\") {\r\n    return (\r\n      <div className=\"content_container\">\r\n        <div className=\"content__\">\r\n          <div className=\"title_container_crt\">\r\n            <p>Создать тест</p>\r\n            {errors.map(e=> <p>{e}</p>)}\r\n          </div>\r\n          <div className=\"test-name_container\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"quiz-quiz_name\"\r\n              className=\"text-input\"\r\n              placeholder=\"Название теста\"\r\n            />\r\n          </div>\r\n          <div class=\"is-private_container\">\r\n            <div class=\"checkbox\">\r\n              <input\r\n                type=\"checkbox\"\r\n                id=\"is_public\"\r\n                className=\"inp\"\r\n                name=\"quiz-is_public\"\r\n              />\r\n\r\n              <label for=\"is_public\"></label>\r\n            </div>\r\n            <p>Сделать открытым</p>\r\n          </div>\r\n          <form name=\"quiz\" className=\"questions_global_container\">\r\n            {array.map((elQ) => {\r\n              return (\r\n                <QuestionComponent\r\n                  setImage={setArray}\r\n                  choices={elQ.choises}\r\n                  addAnswers={addAnswers}\r\n                  question_id={elQ.question_id}\r\n                  deleteQuestion={deleteQuestion}\r\n                  deleteAnswer={deleteAnswer}\r\n                />\r\n              );\r\n            })}\r\n          </form>\r\n          <div className=\"add-question-button_container\">\r\n            <div\r\n              onClick={addNewQuestion}\r\n              className=\"add-question-button add-button button\"\r\n            >\r\n              <div className=\"add-img\">\r\n                <div></div>\r\n              </div>\r\n              <p>Добавить вопрос</p>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"create-button_container\">\r\n            <div onClick={saveQuizName} className=\"create-button button\">\r\n              <p>Создать</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n    ///Обработка ошибок 404\r\n  } else if (test_status.status === 404) {\r\n    return <p>{test_status.message.toString()}</p>;\r\n    ///Екран Успешного добавления теста\r\n  } else if (test_status.status === 200) {\r\n    function copy() {\r\n      var msg = test_status.action.quiz_id;\r\n      var temp = document.createElement(\"textarea\");\r\n      var tempMsg = document.createTextNode(msg);\r\n      temp.appendChild(tempMsg);\r\n      document.body.appendChild(temp);\r\n      temp.select();\r\n      document.execCommand(\"copy\");\r\n      document.body.removeChild(temp);\r\n    }\r\n    return (\r\n      <div id=\"quiz_id\" className=\"content__auth\">\r\n        <div className=\"autorization_container\">\r\n          <div className=\"title_container\">\r\n            <p className=\"title\">\r\n              Ід вашего теста: <br />\r\n              <strong>{test_status.action.quiz_id}</strong>\r\n            </p>\r\n          </div>\r\n          <div className=\"button_container\">\r\n            <input\r\n              onClick={copy}\r\n              type=\"button\"\r\n              className=\"button_vote button\"\r\n              value=\"Копировать\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { loadQuizRating } from \"../../../redux/actions/get_quiz_rating\";\r\nimport { sendAnswers } from \"../../../redux/actions/send_answers\";\r\nimport { clearQuiz } from \"../../../redux/actions/show_quizzes\";\r\nimport \"../ResultScreen/Results.css\";\r\n\r\nexport default function TestDoneScreen() {\r\n  const state = useSelector((state) => state.quizzes);\r\n  const user = useSelector((state) => state.user.user.id);\r\n  const quiz_rating = useSelector((state) => state.quiz_rating.quiz_results);\r\n  const { id } = useParams();\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(loadQuizRating(id));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    //console.log(user, id);\r\n    dispatch(sendAnswers({ obj: state.questions, id, user }));\r\n    return () => dispatch(clearQuiz());\r\n    // eslint-disable-next-line\r\n  }, [dispatch, id]);\r\n\r\n  return (\r\n    <div className=\"content_container\">\r\n      <div className=\"content___\">\r\n        <div className=\"title_container\">\r\n          <p>Результаты других пользователей</p>\r\n        </div>\r\n        {quiz_rating.map((el) => {\r\n          return (\r\n            <div className=\"quizbox_container\">\r\n              <div className=\"quizbox\">\r\n                <div className=\"quiz-info\">\r\n                <div className=\"quiz-title\">\r\n                <p>{el.dude.name}</p>\r\n                <p>Дата складання: {new Date(el.pass_date).toLocaleDateString()}</p>\r\n                </div>\r\n                </div>\r\n                <div className=\"quiz-result\">\r\n                {Math.round(el.rating*100)}/100\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n{\r\n  /* <div>\r\n      { <ul>\r\n        {quiz_rating &&\r\n          quiz_rating.map((el) => {\r\n            return <li>{el.rating}</li>;\r\n          })}\r\n      </ul> }\r\n    </div> */\r\n}\r\n","import React from \"react\";\r\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Header from \"../components/Header/Header\";\r\nimport HomeScreen from \"./Screens.js/HomeScreen\";\r\nimport Quiz from \"./Screens.js/Quiz\";\r\nimport ResultsScreen from \"./Screens.js/ResultScreen/ResultsScreen\";\r\nimport { UserScreen } from \"./Screens.js/UserScreen.js\";\r\nimport AddQuizScreen from \"./Screens.js/AddQuizScreen\";\r\nimport TestDoneScreen from \"./Screens.js/TestDoneScreen/TestDoneScreen\";\r\n\r\n\r\nfunction MainNavigator() {\r\n  return (\r\n    <Router>\r\n        <Header />\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <UserScreen />\r\n          </Route>\r\n          <Route path=\"/home\">\r\n            <HomeScreen />\r\n          </Route>\r\n          <Route path=\"/add\">\r\n            <AddQuizScreen />\r\n          </Route>\r\n          <Route path=\"/quiz/:id\">\r\n            <Quiz />\r\n          </Route>\r\n          <Route path=\"/done/:id\">\r\n            <TestDoneScreen />\r\n          </Route>\r\n          <Route path=\"/results/\">\r\n            <ResultsScreen />\r\n          </Route>\r\n        </Switch>\r\n    </Router>\r\n  );\r\n}\r\nexport default React.memo(MainNavigator);\r\n","import { Provider } from \"react-redux\";\r\nimport { Profiler } from \"react\";\r\nimport store from \"./redux/store\";\r\nimport MainNavigator from \"./navigation/MainNavigator\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <MainNavigator />\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport \"fontsource-roboto\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}